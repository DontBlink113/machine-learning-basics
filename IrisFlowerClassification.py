"""IrisClassification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H-v-erTk6MJC1OVW7VTuqRPcB3iycNAT

Import Statements
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

"""Read the Data"""

df = pd.read_csv('IRIS.csv')

"""Visualize Data For Patterns"""

sns.pairplot(df, hue = 'species')

"""Seperate Independent and Dependent Variables"""

data = df.values
X = data[:, 0:4]
Y = data[:, 4]

"""Split Data into Training and Testing"""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2)

"""Model 1: Support Vector Machine Algorithm"""

from sklearn.svm import SVC
model_svc = SVC()
model_svc.fit(X_train, Y_train)

prediction1 = model_svc.predict(X_test)

from sklearn.metrics import accuracy_score
print(accuracy_score(Y_test, prediction1))
for i in range(len(prediction1)):
  print(Y_test[i], prediction1[i])

"""Model2 Logistic Regression"""

from sklearn.linear_model import LogisticRegression
model_LR = LogisticRegression()
model_LR.fit(X_train, Y_train)

prediction2 = model_LR.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(Y_test, prediction2))

"""Model3 Decision Tree Classifier"""

from sklearn.tree import DecisionTreeClassifier
model_DTC = DecisionTreeClassifier()
model_DTC.fit(X_train, Y_train)

prediction3 = model_svc.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(Y_test, prediction3))

"""Add New Data And Predict"""

X_New = np.array([[3, 2, 1, 0.2], [0.5, 2, 3, 0.1], [0.1, 3, 2, 2]])
print(X_New)
prediction4 = model_svc.predict(X_New)
print(prediction4)
